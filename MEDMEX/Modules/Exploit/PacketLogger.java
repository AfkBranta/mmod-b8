/*
 * Decompiled with CFR 0.152.
 */
package MEDMEX.Modules.Exploit;

import MEDMEX.Client;
import MEDMEX.Events.Event;
import MEDMEX.Events.events.EventPacket;
import MEDMEX.Modules.Category;
import MEDMEX.Modules.Module;
import MEDMEX.Settings.Setting;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Set;
import net.minecraft.src.Packet;

public class PacketLogger
extends Module {
    public PacketLogger() {
        super("PacketLogger", "Logs packets", 0, Category.Exploit);
        Set packets = Packet.packetClassToIdMap.keySet();
        ArrayList<String> packetNames = new ArrayList<String>();
        for (Class c : packets) {
            packetNames.add(c.getSimpleName());
        }
        Collections.sort(packetNames);
        for (String s : packetNames) {
            this.addSetting(new Setting(s, (Module)this, false));
        }
    }

    @Override
    public void onDisable() {
    }

    @Override
    public void onEvent(Event e) {
        if (!(e instanceof EventPacket)) {
            return;
        }
        EventPacket event = (EventPacket)e;
        Packet p = event.getPacket();
        if (p == null) {
            return;
        }
        if (!this.getSet(p.getClass().getSimpleName()).getValBoolean()) {
            return;
        }
        String s = "[" + (Object)((Object)event.getBound()) + "] " + p.getClass().getSimpleName();
        Field[] fields = p.getClass().getDeclaredFields();
        int i = 0;
        while (i < fields.length) {
            fields[i].setAccessible(true);
            try {
                s = i == 0 ? String.valueOf(s) + " " + fields[i].getName() + ": " + fields[i].get(p) : String.valueOf(s) + ", " + fields[i].getName() + ": " + fields[i].get(p);
            }
            catch (IllegalArgumentException e1) {
                e1.printStackTrace();
            }
            catch (IllegalAccessException e1) {
                e1.printStackTrace();
            }
            ++i;
        }
        try {
            System.out.println(s);
            Client.sendLocalChat(s);
        }
        catch (Exception exception) {
            // empty catch block
        }
    }

    @Override
    public void onEnable() {
    }
}

